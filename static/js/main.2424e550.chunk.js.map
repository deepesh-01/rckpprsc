{"version":3,"sources":["images/plrck.png","images/compsc.png","images/yomo.png","images/como.png","images/paper.png","images/plppr.png","images/plsc.png","images/comprck.png","images/compppr.png","Components/header.js","Components/game.js","Components/mainC.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Headers","Navbar","bg","variant","Brand","className","Container","align","src","rock","width","height","alt","paper","scissor","Game","props","handleChange","event","setState","value","target","como","state","disablcm","pimg","ym","cimg","compm","disablpg","cm","sort","Math","random","find","compMove","console","log","imgSt","pp","plrck","plppr","plsc","cp","comprck","compppr","compsc","playGame","winner","bind","Jumbotron","fluid","FormControl","FormLabel","RadioGroup","row","aria-label","name","this","onChange","FormControlLabel","control","Radio","label","labelPlacement","Button","color","disabled","onClick","Component","Main","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2424e550.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plrck.1166b598.png\";","module.exports = __webpack_public_path__ + \"static/media/compsc.fc53979d.png\";","module.exports = __webpack_public_path__ + \"static/media/yomo.e59f12e3.png\";","module.exports = __webpack_public_path__ + \"static/media/como.ff7dfca2.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.75a3bf0d.png\";","module.exports = __webpack_public_path__ + \"static/media/plppr.82c35f3a.png\";","module.exports = __webpack_public_path__ + \"static/media/plsc.726c3943.png\";","module.exports = __webpack_public_path__ + \"static/media/comprck.25965bc0.png\";","module.exports = __webpack_public_path__ + \"static/media/compppr.13c5ba4a.png\";","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../App.css';\r\nimport {Navbar, Container, Jumbotron } from 'react-bootstrap';\r\nimport rock from '../images/plrck.png';\r\nimport paper from '../images/paper.png';\r\nimport scissor from '../images/compsc.png';\r\n\r\nexport const Headers = () => {\r\n    return(\r\n        <div >\r\n            <div >\r\n            <Navbar bg=\"dark\" variant=\"dark\" >\r\n            \r\n                <Navbar.Brand >This is a simple rock-paper-scissor game</Navbar.Brand>\r\n            \r\n            </Navbar>\r\n            </div>\r\n        \r\n        <div className='title'>\r\n            <Container>\r\n                <div align='center'>\r\n                    <div className=\"item\">\r\n                        <img src={rock} width='100' height='100' alt='ROCK'\r\n                             className='imgp'/>\r\n                        <span className='font-weight-bold' >-</span>\r\n                        <img src={paper} width='100' height='100' alt='PAPER' />\r\n                        <span className='font-weight-bold' >-</span>\r\n                        <img src={scissor} width='100' height='100' alt='SCISSOR'\r\n                             className='imgc' />\r\n                    </div>\r\n                </div>\r\n                <div align='center' className='title'>\r\n                    <span className='head-title'> Rock - Paper - Scissors </span>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Jumbotron, Button } from 'react-bootstrap';\r\nimport { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup} from '@material-ui/core';\r\nimport '../App.css';\r\nimport ym from '../images/yomo.png';\r\nimport compm from '../images/como.png';\r\nimport plrck from '../images/plrck.png';\r\nimport plppr from '../images/plppr.png';\r\nimport plsc from '../images/plsc.png';\r\nimport comprck from '../images/comprck.png';\r\nimport compppr from '../images/compppr.png';\r\nimport compsc from '../images/compsc.png';\r\n\r\n\r\n \r\n\r\nclass Game extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            disablcm: true,\r\n            disablpg: true,\r\n            value : 'Select Your Move',\r\n            compMove: '',\r\n            winner : '',\r\n            como : '',\r\n            pp : null,\r\n            cp : null,\r\n            pimg : ym,\r\n            cimg : compm\r\n            }\r\n        this.handleChange=this.handleChange.bind(this)\r\n        this.playGame=this.playGame.bind(this)\r\n\r\n        \r\n    }\r\n    handleChange = (event) =>{\r\n        this.setState({value : event.target.value, como : 'Select computer\\'s move',})\r\n          this.setState((state) => {\r\n            return {disablcm : false,pimg:ym,cimg:compm,disablpg:true}\r\n          });\r\n        \r\n        const moves = ['rock', 'paper', 'scissor']\r\n        const cm = moves.sort(() => Math.random() - Math.random()).find(() => true);\r\n        this.setState((state) => {\r\n            return {compMove : cm, como : 'Select comp\\'s Move'}\r\n        });\r\n        console.log('Player value hc func : ' + this.state.value)\r\n        console.log('Computer value hc func : ' + this.state.compMove)  \r\n    }\r\n\r\n    imgSt = () => {\r\n        switch(this.state.value){\r\n            case 'rock':\r\n                this.setState((state) => {\r\n                    return {pp : plrck}\r\n                  });\r\n                  break;\r\n            case 'paper':\r\n                this.setState((state) => {\r\n                    return {pp : plppr}\r\n                });\r\n                break;\r\n            case 'scissor':\r\n                this.setState((state) => {\r\n                    return {pp : plsc}\r\n                    });\r\n                break;\r\n            \r\n        }\r\n        switch(this.state.compMove){\r\n            case 'rock':\r\n                this.setState((state) => {\r\n                    return {cp : comprck}\r\n                });\r\n                break;\r\n            case 'paper':\r\n                this.setState((state) => {\r\n                    return {cp : compppr}\r\n                });\r\n                break;\r\n            case 'scissor':\r\n                this.setState((state) => {\r\n                    return {cp : compsc}\r\n                    });\r\n                break;\r\n            \r\n        }\r\n        this.setState((state) => {\r\n            return {como : 'Click Play', disablpg : false}\r\n          });\r\n\r\n    }\r\n        \r\n    playGame = () => { \r\n\r\n        this.setState((state) => {\r\n            return{como : this.state.compMove}\r\n        })\r\n        this.setState((state) => {\r\n            return{pimg : this.state.pp}\r\n        })\r\n        this.setState((state) => {\r\n            return{cimg : this.state.cp}\r\n        })\r\n        console.log('Player value pg func : ' + this.state.value)\r\n        console.log('Computer value pg func : ' + this.state.compMove)  \r\n        console.log('Player img pg func : ' + this.state.pp)\r\n        console.log('Computer img pg func : ' + this.state.cp)\r\n        if (this.state.value === this.state.compMove) {\r\n            console.log(\"Match Tied\");\r\n            this.setState((state) => {\r\n                return {winner : 'Match Tied'}\r\n              });\r\n        }\r\n\t\tif((this.state.value===\"rock\" && this.state.compMove===\"scissor\") ||\r\n\t\t\t(this.state.value===\"paper\" && this.state.compMove===\"rock\") ||\r\n\t\t\t(this.state.value===\"scissor\" && this.state.compMove===\"paper\")) {\r\n                this.setState((state) => {\r\n                    return {winner : 'You won'}\r\n                  });\r\n                console.log(\"You Won\")\r\n\t\t}\r\n        else if((this.state.value===\"scissor\" && this.state.compMove===\"rock\") ||\r\n                (this.state.value===\"rock\" && this.state.compMove===\"paper\") ||\r\n                (this.state.value===\"paper\" && this.state.compMove===\"scissor\")){\r\n            this.setState((state) => {\r\n                return {winner : 'Computer won'}\r\n              });       \r\n              console.log(\"Computer Won\")\r\n        }\r\n        this.setState((state) => {\r\n            return{ disablcm : true, disablpg : true}\r\n        })\r\n\t\r\n    }  \r\n    render(){\r\n        return (\r\n            <div>\r\n                <Jumbotron fluid>\r\n                    <div className='row'>\r\n                        <div className='col-xs-6 col-md-6' align='center'>\r\n                            <div>\r\n                                <FormControl >\r\n                                    <FormLabel  >Select your move</FormLabel>\r\n                                    <RadioGroup row \r\n                                                aria-label=\"choice\" \r\n                                                name={this.props.value}  \r\n                                                value={this.state.value}                                   \r\n                                                onChange={this.handleChange}>\r\n                                        <FormControlLabel \r\n                                        value=\"rock\" \r\n                                        control={<Radio />} \r\n                                        label=\"Rock\"\r\n                                        labelPlacement='top' />\r\n                                        <FormControlLabel \r\n                                        value=\"paper\" \r\n                                        control={<Radio />} \r\n                                        label=\"Paper\" \r\n                                        labelPlacement='top'/>\r\n                                        <FormControlLabel value=\"scissor\" \r\n                                        control={<Radio />} \r\n                                        label=\"Scissor\" \r\n                                        labelPlacement='top'/>\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div align='center' className='title'>\r\n                                    <Button variant=\"outline-primary\" \r\n                                            color=\"primary\" \r\n                                            disabled={this.state.disablcm}   \r\n                                            onClick={this.imgSt}>\r\n                                        Select Comp's Move\r\n                                    </Button>\r\n                                </div>\r\n                        </div>\r\n                            <div className='col-xs-6 col-md-6' >\r\n                                <div align='center'>\r\n                                    \r\n                                Your move = {this.state.value}\r\n                                </div>\r\n                                <div align='center'>\r\n                                Comp's Move = {this.state.como}\r\n                                </div>\r\n                                <div align='center' className='title'>\r\n                                    <Button variant=\"outline-primary\" \r\n                                            color=\"primary\" \r\n                                            disabled={this.state.disablpg}   \r\n                                            onClick={this.playGame}>\r\n                                        Play\r\n                                    </Button>\r\n                                </div>\r\n                                <div align='center' >\r\n                                    <img src={this.state.pimg} \r\n                                         alt='Play' \r\n                                         width='100' \r\n                                         height='100'\r\n                                         className='imgp'\r\n                                         ></img>\r\n                                    <span>xx</span>\r\n                                    <img src={this.state.cimg} \r\n                                         alt='Play' \r\n                                         width='100' \r\n                                         height='100'\r\n                                         className='imgc'></img>\r\n                                </div>\r\n                            <div align=\"center\">\r\n                                 <span className='winner'>{this.state.winner}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\nexport default Game;\r\n\r\n","import React , { Component } from 'react';\r\nimport {Headers} from './header';\r\nimport Game from './game'\r\n\r\n\r\n\r\nclass Main extends Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Headers />\r\n                <Game />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Main;","import React,{Component} from 'react';\nimport './App.css';\nimport Main from './Components/mainC'\n\nclass App extends Component {\n  render (){\n    return(\n    <Main />\n  )}\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}